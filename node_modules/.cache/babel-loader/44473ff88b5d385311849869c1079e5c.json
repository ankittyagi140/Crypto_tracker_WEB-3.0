{"ast":null,"code":"import _slicedToArray from\"C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,createContext,useContext,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Crypto=/*#__PURE__*/createContext();var CryptoContext=function CryptoContext(_ref){var children=_ref.children;var _useState=useState(\"USD\"),_useState2=_slicedToArray(_useState,2),currency=_useState2[0],setCurrency=_useState2[1];var _useState3=useState(\"$\"),_useState4=_slicedToArray(_useState3,2),symbol=_useState4[0],setSymbol=_useState4[1];useEffect(function(){if(currency===\"INR\"){setSymbol(\"RS\");}else if(currency===\"USD\"){setSymbol(\"$\");}},[currency]);return/*#__PURE__*/_jsx(Crypto.Provider,{value:{currency:currency,symbol:symbol,setCurrency:setCurrency},children:children});};export default CryptoContext;export var CryptoState=function CryptoState(){return useContext(Crypto);};","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/CryptoContext/CryptoContext.jsx"],"names":["useState","createContext","useContext","useEffect","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"mappings":"mJAAA,OAASA,QAAT,CAAmBC,aAAnB,CAAkCC,UAAlC,CAA8CC,SAA9C,KAA+D,OAA/D,C,2CACA,GAAMC,CAAAA,MAAM,cAAGH,aAAa,EAA5B,CAEA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACtC,cAAgCN,QAAQ,CAAC,KAAD,CAAxC,wCAAOO,QAAP,eAAiBC,WAAjB,eACA,eAA4BR,QAAQ,CAAC,GAAD,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eACAP,SAAS,CAAC,UAAM,CACd,GAAII,QAAQ,GAAK,KAAjB,CAAwB,CACtBG,SAAS,CAAC,IAAD,CAAT,CACD,CAFD,IAEO,IAAIH,QAAQ,GAAK,KAAjB,CAAwB,CAC7BG,SAAS,CAAC,GAAD,CAAT,CACD,CACF,CANQ,CAMN,CAACH,QAAD,CANM,CAAT,CAOA,mBAAO,KAAC,MAAD,CAAQ,QAAR,EAAiB,KAAK,CAAE,CAACA,QAAQ,CAARA,QAAD,CAAUE,MAAM,CAANA,MAAV,CAAiBD,WAAW,CAAXA,WAAjB,CAAxB,UAAwDF,QAAxD,EAAP,CACD,CAXD,CAYA,cAAeD,CAAAA,aAAf,CAEA,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,MAAOT,CAAAA,UAAU,CAACE,MAAD,CAAjB,CACD,CAFM","sourcesContent":["import { useState, createContext, useContext, useEffect } from \"react\";\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [symbol, setSymbol] = useState(\"$\");\r\n  useEffect(() => {\r\n    if (currency === \"INR\") {\r\n      setSymbol(\"RS\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency]);\r\n  return <Crypto.Provider value={{currency,symbol,setCurrency}}>{children}</Crypto.Provider>;\r\n};\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}