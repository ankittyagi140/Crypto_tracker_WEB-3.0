{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\Components\\\\CoinList\\\\CoinList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\nimport { CoinData } from \"../../Config/api\";\nimport axios from \"axios\";\nimport \"./CoinList.css\";\nimport { Container, LinearProgress, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinList = () => {\n  _s();\n\n  const {\n    currency,\n    symbol\n  } = useContext(CryptoState);\n  const [coinSummary, setCoinSummary] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const navigate = useNavigate();\n\n  const fetchCoinData = async currency => {\n    const {\n      data\n    } = await new Promise((res, rej) => {\n      setTimeout(() => {\n        try {\n          res(axios.get(CoinData(currency)));\n        } catch (err) {\n          console.log(err);\n        }\n      }, 10);\n    });\n    setCoinSummary(data);\n  };\n\n  const handelSearch = () => {\n    return coinSummary.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase.includes(search));\n  };\n\n  console.log(coinSummary);\n  useEffect(() => {\n    setLoading(true);\n    fetchCoinData(currency);\n    setLoading(false);\n  }, [currency]);\n\n  const numFormatter = num => {\n    if (num > 999 && num < 1000000) {\n      return (num / 1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million \n    } else if (num > 1000000) {\n      return (num / 1000000).toFixed(2) + 'M'; // convert to M for number from > 1 million \n    } else if (num < 900) {\n      return num; // if value < 1000, nothing to do\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"coin_summary_contaner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"15px 0 10px 0px\",\n          fontFamily: \"Montserrat\",\n          fontSize: \"32px\",\n          fontWeight: \"600\"\n        },\n        children: \"Get detail of your coins with market cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\",\n          width: \"100%\"\n        },\n        varient: \"outlined\",\n        label: \"Search for you favourite coin..\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Coin\", \"Price\", \"24Hrs-Change-%\", \"Market Cap\"].map(element => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"black\",\n                    fontWeight: \"700\",\n                    fontFamily: \"Montserrat\",\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\"\n                  },\n                  children: element\n                }, element, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handelSearch().map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              onClick: () => {\n                navigate(`coin/${row === null || row === void 0 ? void 0 : row.id}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                style: {\n                  display: \"flex\",\n                  gap: \"15\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row === null || row === void 0 ? void 0 : row.image,\n                  alt: row === null || row === void 0 ? void 0 : row.name,\n                  style: {\n                    height: \"20px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CoinName, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textTransform: \"uppercase\",\n                      marginBottom: \"2px\"\n                    },\n                    children: row === null || row === void 0 ? void 0 : row.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: row === null || row === void 0 ? void 0 : row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(CoinName, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [symbol, /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: row === null || row === void 0 ? void 0 : row.current_price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"#ffffff\"\n                  },\n                  children: row === null || row === void 0 ? void 0 : row.price_change_percentage_24h\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: numFormatter(row === null || row === void 0 ? void 0 : row.market_cap)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinList, \"LSukcXHi4234NHoF0FEAgqayzok=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CoinList;\nexport default CoinList;\nconst CoinName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #ffffff;\n  margin:5px;\n  font-size:12px;\n`;\n_c2 = CoinName;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CoinList\");\n$RefreshReg$(_c2, \"CoinName\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/Components/CoinList/CoinList.jsx"],"names":["useContext","useEffect","useState","CryptoState","CoinData","axios","Container","LinearProgress","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","useNavigate","styled","CoinList","currency","symbol","coinSummary","setCoinSummary","loading","setLoading","search","setSearch","navigate","fetchCoinData","data","Promise","res","rej","setTimeout","get","err","console","log","handelSearch","filter","coin","name","toLowerCase","includes","numFormatter","num","toFixed","margin","fontFamily","fontSize","fontWeight","width","e","target","value","backgroundColor","map","element","color","display","justifyContent","alignItems","row","id","gap","flexDirection","image","height","textTransform","marginBottom","current_price","price_change_percentage_24h","market_cap","CoinName","div"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,GAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,cAPF,EAQEC,SARF,EASEC,QATF,EAUEC,SAVF,QAWO,eAXP;AAYA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBpB,UAAU,CAACG,WAAD,CAAvC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACuB,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMyB,QAAQ,GAAGX,WAAW,EAA5B;;AACA,QAAMY,aAAa,GAAG,MAAOT,QAAP,IAAoB;AACxC,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAM,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/CC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI;AACFF,UAAAA,GAAG,CAAC1B,KAAK,CAAC6B,GAAN,CAAU9B,QAAQ,CAACe,QAAD,CAAlB,CAAD,CAAH;AACD,SAFD,CAEE,OAAOgB,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,OANS,EAMP,EANO,CAAV;AAOD,KARsB,CAAvB;AASAb,IAAAA,cAAc,CAACO,IAAD,CAAd;AACD,GAXD;;AAYA,QAAMS,YAAY,GAAG,MAAM;AACzB,WAAOjB,WAAW,CAACkB,MAAZ,CACJC,IAAD,IACEA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiClB,MAAjC,KACAe,IAAI,CAACpB,MAAL,CAAYsB,WAAZ,CAAwBC,QAAxB,CAAiClB,MAAjC,CAHG,CAAP;AAKD,GAND;;AAOAW,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACApB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,aAAa,CAACT,QAAD,CAAb;AACAK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT;;AAKA,QAAMyB,YAAY,GAAEC,GAAD,IAAQ;AACzB,QAAGA,GAAG,GAAG,GAAN,IAAaA,GAAG,GAAG,OAAtB,EAA8B;AAC1B,aAAO,CAACA,GAAG,GAAC,IAAL,EAAWC,OAAX,CAAmB,CAAnB,IAAwB,GAA/B,CAD0B,CACU;AACvC,KAFD,MAEM,IAAGD,GAAG,GAAG,OAAT,EAAiB;AACnB,aAAO,CAACA,GAAG,GAAC,OAAL,EAAcC,OAAd,CAAsB,CAAtB,IAA2B,GAAlC,CADmB,CACoB;AAC1C,KAFK,MAEA,IAAGD,GAAG,GAAG,GAAT,EAAa;AACf,aAAOA,GAAP,CADe,CACH;AACf;AACJ,GARC;;AASA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,uBAArB;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLE,UAAAA,MAAM,EAAE,iBADH;AAELC,UAAAA,UAAU,EAAE,YAFP;AAGLC,UAAAA,QAAQ,EAAE,MAHL;AAILC,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEH,UAAAA,MAAM,EAAE,MAAV;AAAkBI,UAAAA,KAAK,EAAE;AAAzB,SADT;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,iCAHR;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACf1B,UAAAA,SAAS,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cAXF,eAmBE,QAAC,cAAD;AAAA,kBACG/B,OAAO,gBACN,QAAC,cAAD;AACE,UAAA,KAAK,EAAE;AAAEgC,YAAAA,eAAe,EAAE;AAAnB;AADT;AAAA;AAAA;AAAA;AAAA,gBADM,gBAKN,QAAC,KAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEA,cAAAA,eAAe,EAAE;AAAnB,aAAlB;AAAA,mCACE,QAAC,QAAD;AAAA,wBACG,CAAC,MAAD,EAAS,OAAT,EAAkB,gBAAlB,EAAoC,YAApC,EAAkDC,GAAlD,CACEC,OAAD,IAAa;AACX,oCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAE;AACLC,oBAAAA,KAAK,EAAE,OADF;AAELR,oBAAAA,UAAU,EAAE,KAFP;AAGLF,oBAAAA,UAAU,EAAE,YAHP;AAILW,oBAAAA,OAAO,EAAC,MAJH;AAKLC,oBAAAA,cAAc,EAAC,cALV;AAMLC,oBAAAA,UAAU,EAAC;AANN,mBADT;AAAA,4BAaGJ;AAbH,mBASOA,OATP;AAAA;AAAA;AAAA;AAAA,wBADF;AAiBD,eAnBF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eA0BE,QAAC,SAAD;AAAA,sBACGnB,YAAY,GAAGkB,GAAf,CAAoBM,GAAD,iBAClB,QAAC,QAAD;AAEE,cAAA,OAAO,EAAE,MAAM;AACbnC,gBAAAA,QAAQ,CAAE,QAAOmC,GAAR,aAAQA,GAAR,uBAAQA,GAAG,CAAEC,EAAG,EAAjB,CAAR;AACD,eAJH;AAAA,sCAME,QAAC,SAAD;AACE,gBAAA,SAAS,EAAC,IADZ;AAEE,gBAAA,KAAK,EAAC,KAFR;AAGE,gBAAA,KAAK,EAAE;AAAEJ,kBAAAA,OAAO,EAAE,MAAX;AAAmBK,kBAAAA,GAAG,EAAE,IAAxB;AAA6BC,kBAAAA,aAAa,EAAC,QAA3C;AAAoDJ,kBAAAA,UAAU,EAAC,QAA/D;AAAwED,kBAAAA,cAAc,EAAC;AAAvF,iBAHT;AAAA,wCAKE;AACE,kBAAA,GAAG,EAAEE,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEI,KADZ;AAEE,kBAAA,GAAG,EAAEJ,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAErB,IAFZ;AAGE,kBAAA,KAAK,EAAE;AAAE0B,oBAAAA,MAAM,EAAE;AAAV;AAHT;AAAA;AAAA;AAAA;AAAA,wBALF,eAUE,QAAC,QAAD;AAAA,0CACE;AAAM,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,aAAa,EAAE,WAAjB;AAA8BC,sBAAAA,YAAY,EAAC;AAA3C,qBAAb;AAAA,8BACGP,GADH,aACGA,GADH,uBACGA,GAAG,CAAE1C;AADR;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAA,8BAAO0C,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAErB;AAAZ;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAuBE,QAAC,SAAD;AAAA,uCACE,QAAC,QAAD;AAAA,yCACE;AAAA,+BAAOrB,MAAP,eACA;AAAA,gCAAO0C,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEQ;AAAZ;AAAA;AAAA;AAAA;AAAA,4BADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAvBF,eA8BE,QAAC,SAAD;AAAA,uCACA;AAAM,kBAAA,KAAK,EAAE;AAACZ,oBAAAA,KAAK,EAAC;AAAP,mBAAb;AAAA,4BAAiCI,GAAjC,aAAiCA,GAAjC,uBAAiCA,GAAG,CAAES;AAAtC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBA9BF,eAkCE,QAAC,SAAD;AAAA,uCACE;AAAA,4BACG3B,YAAY,CAACkB,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEU,UAAN;AADf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAlCF;AAAA,eACOV,GAAG,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuGD,CA/ID;;GAAM7C,Q;UAKaF,W;;;KALbE,Q;AAgJN,eAAeA,QAAf;AAEA,MAAMuD,QAAQ,GAAGxD,MAAM,CAACyD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,Q","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\r\nimport { CoinData } from \"../../Config/api\";\r\nimport axios from \"axios\";\r\nimport \"./CoinList.css\";\r\nimport {\r\n  Container,\r\n  LinearProgress,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CoinList = () => {\r\n  const { currency, symbol } = useContext(CryptoState);\r\n  const [coinSummary, setCoinSummary] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const fetchCoinData = async (currency) => {\r\n    const { data } = await new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        try {\r\n          res(axios.get(CoinData(currency)));\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }, 10);\r\n    });\r\n    setCoinSummary(data);\r\n  };\r\n  const handelSearch = () => {\r\n    return coinSummary.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search) ||\r\n        coin.symbol.toLowerCase.includes(search)\r\n    );\r\n  };\r\n  console.log(coinSummary);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCoinData(currency);\r\n    setLoading(false);\r\n  }, [currency]);\r\n  const numFormatter=(num) =>{\r\n    if(num > 999 && num < 1000000){\r\n        return (num/1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million \r\n    }else if(num > 1000000){\r\n        return (num/1000000).toFixed(2) + 'M'; // convert to M for number from > 1 million \r\n    }else if(num < 900){\r\n        return num; // if value < 1000, nothing to do\r\n    }\r\n}\r\n  return (\r\n    <div>\r\n      <Container className=\"coin_summary_contaner\">\r\n        <p\r\n          style={{\r\n            margin: \"15px 0 10px 0px\",\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"32px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          Get detail of your coins with market cap\r\n        </p>\r\n        <TextField\r\n          style={{ margin: \"20px\", width: \"100%\" }}\r\n          varient=\"outlined\"\r\n          label=\"Search for you favourite coin..\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n        <TableContainer>\r\n          {loading ? (\r\n            <LinearProgress\r\n              style={{ backgroundColor: \"gold\" }}\r\n            ></LinearProgress>\r\n          ) : (\r\n            <Table>\r\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                <TableRow>\r\n                  {[\"Coin\", \"Price\", \"24Hrs-Change-%\", \"Market Cap\"].map(\r\n                    (element) => {\r\n                      return (\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: \"700\",\r\n                            fontFamily: \"Montserrat\",\r\n                            display:\"flex\",\r\n                            justifyContent:\"space-around\",\r\n                            alignItems:\"center\",\r\n                          }}\r\n                          key={element}\r\n                          //align={element === \"coin\" ? \"\" : \"right\"}\r\n\r\n                        >\r\n                          {element}\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                  )}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {handelSearch().map((row) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    onClick={() => {\r\n                      navigate(`coin/${row?.id}`);\r\n                    }}\r\n                  >\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ display: \"flex\", gap: \"15\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\" }}\r\n                    >\r\n                      <img\r\n                        src={row?.image}\r\n                        alt={row?.name}\r\n                        style={{ height: \"20px\" }}\r\n                      />\r\n                      <CoinName >\r\n                        <span style={{ textTransform: \"uppercase\" ,marginBottom:\"2px\"}}>\r\n                          {row?.symbol}\r\n                        </span>\r\n                        <span>{row?.name}</span>\r\n                      </CoinName>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <CoinName>\r\n                        <span>{symbol}\r\n                        <span>{row?.current_price}</span>\r\n                        </span>\r\n                      </CoinName>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    <span style={{color:\"#ffffff\"}}>{row?.price_change_percentage_24h}</span>\r\n                      \r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span>\r\n                        {numFormatter(row?.market_cap)}\r\n                      </span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default CoinList;\r\n\r\nconst CoinName = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #ffffff;\r\n  margin:5px;\r\n  font-size:12px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}