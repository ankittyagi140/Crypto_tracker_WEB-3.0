{"ast":null,"code":"// const HocMillion = (NewComponent) => {\n//   const HighOrderFunction = () => {\n//       const num = coinData?.market_data?.ath?.usd;\n//     if (num > 999 && num < 1000000) {\n//         return (num / 1000).toFixed(2) + \"K\"; // convert to K for number from > 1000 < 1 million\n//       } else if (num > 1000000) {\n//         return (num / 1000000).toFixed(2) + \"M\"; // convert to M for number from > 1 million\n//       } else if (num < 900) {\n//         return num; // if value < 1000, nothing to do\n//       }\n//     return <NewComponent name=\"ankit\" ></NewComponent>;\n//   };\n//   return HighOrderFunction;\n// };\n// export default HocMillion;\n// //coinData?.market_data?.ath?.usd","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/Components/Hoc/HocMillion.jsx"],"names":[],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n// const HocMillion = (NewComponent) => {\r\n//   const HighOrderFunction = () => {\r\n//       const num = coinData?.market_data?.ath?.usd;\r\n//     if (num > 999 && num < 1000000) {\r\n//         return (num / 1000).toFixed(2) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n//       } else if (num > 1000000) {\r\n//         return (num / 1000000).toFixed(2) + \"M\"; // convert to M for number from > 1 million\r\n//       } else if (num < 900) {\r\n//         return num; // if value < 1000, nothing to do\r\n//       }\r\n//     return <NewComponent name=\"ankit\" ></NewComponent>;\r\n//   };\r\n//   return HighOrderFunction;\r\n// };\r\n// export default HocMillion;\r\n// //coinData?.market_data?.ath?.usd"]},"metadata":{},"sourceType":"module"}