{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\CryptoContext\\\\CryptoContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, createContext, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"USD\");\n  const [symbol, setSymbol] = useState(\"$\");\n  useEffect(() => {\n    if (currency === \"INR\") {\n      setSymbol(\"RS\");\n    } else if (currency === \"USD\") {\n      setSymbol(\"$\");\n    }\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: {\n      currency,\n      symbol,\n      setCurrency\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CryptoContext, \"0JVjjvZW6GJZUPAtenqW7Ge5jOY=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/CryptoContext/CryptoContext.jsx"],"names":["useState","createContext","useContext","useEffect","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;;AACA,MAAMC,MAAM,gBAAGH,aAAa,EAA5B;;AAEA,MAAMI,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,GAAD,CAApC;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,KAAK,KAAjB,EAAwB;AACtBG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAEO,IAAIH,QAAQ,KAAK,KAAjB,EAAwB;AAC7BG,MAAAA,SAAS,CAAC,GAAD,CAAT;AACD;AACF,GANQ,EAMN,CAACH,QAAD,CANM,CAAT;AAOA,sBAAO,QAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAD;AAAUE,MAAAA,MAAV;AAAiBD,MAAAA;AAAjB,KAAxB;AAAA,cAAwDF;AAAxD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMD,a;;KAAAA,a;AAYN,eAAeA,aAAf;AAEA,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC/B,SAAOT,UAAU,CAACE,MAAD,CAAjB;AACD,CAFM;;IAAMO,W;;MAAAA,W","sourcesContent":["import { useState, createContext, useContext, useEffect } from \"react\";\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [symbol, setSymbol] = useState(\"$\");\r\n  useEffect(() => {\r\n    if (currency === \"INR\") {\r\n      setSymbol(\"RS\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency]);\r\n  return <Crypto.Provider value={{currency,symbol,setCurrency}}>{children}</Crypto.Provider>;\r\n};\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}