{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\Components\\\\CoinList\\\\CoinList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\nimport { CoinData } from \"../../Config/api\";\nimport axios from \"axios\";\nimport \"./CoinList.css\";\nimport { Container, LinearProgress, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinList = () => {\n  _s();\n\n  const {\n    currency,\n    symbol\n  } = useContext(CryptoState);\n  const [coinSummary, setCoinSummary] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const Navigate = useNavigate();\n\n  const fetchCoinData = async currency => {\n    const {\n      data\n    } = await new Promise((res, rej) => {\n      setTimeout(() => {\n        try {\n          res(axios.get(CoinData(currency)));\n        } catch (err) {\n          console.log(err);\n        }\n      }, 10);\n    });\n    setCoinSummary(data);\n  };\n\n  const handelSearch = () => {\n    return coinSummary.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase.includes(search));\n  };\n\n  console.log(coinSummary);\n  useEffect(() => {\n    setLoading(true);\n    fetchCoinData(currency);\n    setLoading(false);\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"coin_summary_contaner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"15px 0 10px 0px\",\n          fontFamily: \"Montserrat\",\n          fontSize: \"32px\",\n          fontWeight: \"600\"\n        },\n        children: \"Get detail of your coins with market cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\",\n          width: \"100%\"\n        },\n        varient: \"outlined\",\n        label: \"Search for you favourite coin..\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Coin\", \"Price\", \"24Hrs-Change\", \"Market Cap\"].map(element => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"black\",\n                    fontWeight: \"700\",\n                    fontFamily: \"Montserrat\"\n                  },\n                  align: element === \"coin\" ? \"\" : \"right\",\n                  children: element\n                }, element, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handelSearch().map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              onClick: () => {\n                Navigate(`coin/${row === null || row === void 0 ? void 0 : row.id}`);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinList, \"5eAZcvef0tuvwhUEFcifYRuzdac=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CoinList;\nexport default CoinList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinList\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/Components/CoinList/CoinList.jsx"],"names":["useContext","useEffect","useState","CryptoState","CoinData","axios","Container","LinearProgress","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","useNavigate","CoinList","currency","symbol","coinSummary","setCoinSummary","loading","setLoading","search","setSearch","Navigate","fetchCoinData","data","Promise","res","rej","setTimeout","get","err","console","log","handelSearch","filter","coin","name","toLowerCase","includes","margin","fontFamily","fontSize","fontWeight","width","e","target","value","backgroundColor","map","element","color","row","id"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\r\nimport { CoinData } from \"../../Config/api\";\r\nimport axios from \"axios\";\r\nimport \"./CoinList.css\";\r\nimport {\r\n  Container,\r\n  LinearProgress,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\n\r\nconst CoinList = () => {\r\n  const { currency, symbol } = useContext(CryptoState);\r\n  const [coinSummary, setCoinSummary] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const Navigate = useNavigate()\r\n  const fetchCoinData = async (currency) => {\r\n    const { data } = await new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        try {\r\n          res(axios.get(CoinData(currency)));\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }, 10);\r\n    });\r\n    setCoinSummary(data);\r\n  };\r\n  const handelSearch=()=>{\r\n      return coinSummary.filter(coin=>(\r\n          coin.name.toLowerCase().includes(search)||\r\n          coin.symbol.toLowerCase.includes(search)\r\n      ))\r\n  }\r\n  console.log(coinSummary);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCoinData(currency);\r\n    setLoading(false);\r\n  }, [currency]);\r\n  return (\r\n    <div>\r\n      <Container className=\"coin_summary_contaner\">\r\n        <p\r\n          style={{\r\n            margin: \"15px 0 10px 0px\",\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"32px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          Get detail of your coins with market cap\r\n        </p>\r\n        <TextField\r\n          style={{ margin: \"20px\", width: \"100%\" }}\r\n          varient=\"outlined\"\r\n          label=\"Search for you favourite coin..\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n        <TableContainer>\r\n          {loading ? (\r\n            <LinearProgress\r\n              style={{ backgroundColor: \"gold\" }}\r\n            ></LinearProgress>\r\n          ) : (\r\n            <Table>\r\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                <TableRow>\r\n                  {[\"Coin\", \"Price\", \"24Hrs-Change\", \"Market Cap\"].map(\r\n                    (element) => {\r\n                      return (\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: \"700\",\r\n                            fontFamily: \"Montserrat\",\r\n                          }}\r\n                          key={element}\r\n                          align={element === \"coin\" ? \"\" : \"right\"}\r\n                        >\r\n                          {element}\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                  )}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {\r\n                    handelSearch().map(row=>(\r\n                        <TableRow onClick={(()=>{\r\nNavigate(`coin/${row?.id}`)\r\n                        })}>\r\n                \r\n                  \r\n                </TableRow>\r\n                    ))\r\n                }\r\n               \r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default CoinList;\r\n"]},"metadata":{},"sourceType":"module"}