{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\Components\\\\CoinList\\\\CoinList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\nimport { CoinData } from \"../../Config/api\";\nimport axios from \"axios\";\nimport \"./CoinList.css\";\nimport SelectedButton from \"../SelectedButton/SelectedButton\";\nimport { Container, LinearProgress, Pagination, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinList = () => {\n  _s();\n\n  var _handelSearch;\n\n  const [sortedList, setSortedList] = useState([]);\n  const [flag, setFlag] = useState(false);\n  const {\n    currency,\n    symbol\n  } = useContext(CryptoState);\n  const [coinSummary, setCoinSummary] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const navigate = useNavigate();\n  let [page, setPage] = useState(1);\n  let [coinCount, setCoinCount] = useState(0);\n\n  const fetchCoinData = async currency => {\n    const {\n      data\n    } = await new Promise((res, rej) => {\n      setTimeout(() => {\n        try {\n          res(axios.get(CoinData(currency)));\n        } catch (err) {\n          console.error(err);\n        }\n      }, 10);\n    });\n    setCoinSummary(data);\n  };\n\n  console.log(coinSummary);\n\n  const handelSearch = () => {\n    return coinSummary.filter(coin => coin.name.toLowerCase().includes(search.toLocaleLowerCase()) || coin.symbol.toLowerCase().includes(search.toLocaleLowerCase()));\n  };\n\n  const commonSort = val => {\n    if (!flag) {\n      const context = this;\n      setSortedList(coinSummary.map(coin => coin.context));\n      setFlag(true);\n    } else {\n      alert(\"plese Reset the filter and try again\");\n    }\n\n    return sortedList;\n  }; // console.log(sortedList)\n  //handelling all sorting functionality\n\n\n  const handelSort = e => {\n    if (e.target.innerText === `^ Change-(24h)%`) {\n      commonSort(\"price_change_percentage_24h\"); // if (!flag) {\n      //   setSortedList(\n      //     coinSummary.sort(\n      //       (a, b) =>\n      //         b.price_change_percentage_24h - a.price_change_percentage_24h\n      //     )\n      //   );\n      //   setFlag(true);\n      // } else {\n      //   alert(\"plese Reset the filter and try again\");\n      // }\n    }\n\n    if (e.target.innerText === `^ Price Change`) {\n      setSortedList(coinSummary.sort((a, b) => b.price_change_24h - a.price_change_24h));\n    }\n\n    if (e.target.innerText === `^ Volume(24h)`) {\n      setSortedList(coinSummary.sort((a, b) => b.total_volume - a.total_volume));\n    }\n\n    if (e.target.innerText === `Market Cap`) {\n      setSortedList(coinSummary.sort((a, b) => a.market_cap - b.market_cap));\n    }\n\n    if (e.target.innerText === `Price Change`) {\n      setSortedList(coinSummary.sort((a, b) => a.price_change_24h - b.price_change_24h));\n    }\n\n    if (e.target.innerText === `Volume(24h)`) {\n      setSortedList(coinSummary.sort((a, b) => a.total_volume - b.total_volume));\n    }\n\n    if (e.target.innerText === `Change-(24h)%`) {\n      setSortedList(coinSummary.sort((a, b) => a.price_change_percentage_24h - b.price_change_percentage_24h));\n    } // if(e.target.innerText===\"Reset\"){\n    //   setSortedList(coinSummary)\n    // }\n\n  };\n\n  const handelReset = () => {\n    if (flag) {\n      setSortedList(coinSummary.sort((a, b) => a.market_cap_rank - b.market_cap_rank));\n      setFlag(false);\n    } else {\n      alert(\"please select a filter first\");\n    }\n  };\n\n  console.log(sortedList);\n  useEffect(() => {\n    setLoading(true);\n    fetchCoinData(currency);\n    setLoading(false);\n  }, [currency]);\n\n  const numFormatter = num => {\n    if (num > 999 && num < 1000000) {\n      return (num / 1000).toFixed(2) + \"K\"; // convert to K for number from > 1000 < 1 million\n    } else if (num > 1000000) {\n      return (num / 1000000).toFixed(2) + \"M\"; // convert to M for number from > 1 million\n    } else if (num < 900) {\n      return num; // if value < 1000, nothing to do\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#ffffff\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"coin_summary_contaner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"15px 0 10px 0px\",\n          fontFamily: \"Montserrat\",\n          fontSize: \"32px\",\n          fontWeight: \"600\",\n          color: \"#006f8f\",\n          textAlign: \"center\"\n        },\n        children: \"Now you can track your favourite Coins with market cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\",\n          width: \"100%\"\n        },\n        varient: \"outlined\",\n        label: \"Search for you favourite coin..\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"filter_container\",\n        children: [/*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `^ Change-(24h)%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `^ Price Change`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `^ Volume(24h)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `Change-(24h)%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `Price Change`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `Volume(24h)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectedButton, {\n          onClick: handelSort,\n          children: `Market Cap`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset_button\",\n          onClick: handelReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            Color: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Rank\", \"Coin\", \"Price\", \"Change(24hr)-%\", \"Price Change\", \"Volume(24hr)\", \"Circulating Supply\", `Market Cap ${symbol}`].map(element => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"black\",\n                    fontWeight: \"700\",\n                    fontFamily: \"Montserrat\"\n                  },\n                  children: element\n                }, element, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: (handelSearch() || sortedList).map(row => {\n              const profit = row === null || row === void 0 ? void 0 : row.price_change_percentage_24h.toFixed(2);\n              const priceChange = row === null || row === void 0 ? void 0 : row.price_change_24h.toFixed(2);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  navigate(`coins/${row === null || row === void 0 ? void 0 : row.id}`);\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row === null || row === void 0 ? void 0 : row.market_cap_rank\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    display: \"flex\",\n                    gap: \"15\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row === null || row === void 0 ? void 0 : row.image,\n                    alt: row === null || row === void 0 ? void 0 : row.name,\n                    style: {\n                      height: \"45px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(CoinName, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"600\"\n                      },\n                      children: row === null || row === void 0 ? void 0 : row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(CoinPrice, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"14px\"\n                      },\n                      children: [symbol, /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\" \", row === null || row === void 0 ? void 0 : row.current_price]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: profit > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"green\"\n                    },\n                    children: `+${profit}%`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: `${profit}%`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: priceChange > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"green\"\n                    },\n                    children: `+${priceChange}${symbol}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: [priceChange, symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [numFormatter(row === null || row === void 0 ? void 0 : row.total_volume), \" \", symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [numFormatter(row === null || row === void 0 ? void 0 : row.circulating_supply), \" \", row === null || row === void 0 ? void 0 : row.symbol.toUpperCase()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: numFormatter(row === null || row === void 0 ? void 0 : row.market_cap)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 23\n              }, this);\n            }).slice((page - 1) * 10, (page - 1) * 10 + 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"pagination_component\",\n        count: ((_handelSearch = handelSearch()) === null || _handelSearch === void 0 ? void 0 : _handelSearch.length) / 10,\n        onChange: (_, value) => {\n          setPage(value);\n          window.scroll(0, 300);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinList, \"QH3RVwc7HDe/40s9VYhzh789CXk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CoinList;\nexport default CoinList;\nconst CoinName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #ffffff;\n  margin: 5px;\n  font-size: 12px;\n`;\n_c2 = CoinName;\nconst CoinPrice = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: #ffffff;\n  margin: 5px;\n  font-size: 12px;\n`;\n_c3 = CoinPrice;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CoinList\");\n$RefreshReg$(_c2, \"CoinName\");\n$RefreshReg$(_c3, \"CoinPrice\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/Components/CoinList/CoinList.jsx"],"names":["useContext","useEffect","useState","CryptoState","CoinData","axios","SelectedButton","Container","LinearProgress","Pagination","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","useNavigate","styled","CoinList","sortedList","setSortedList","flag","setFlag","currency","symbol","coinSummary","setCoinSummary","loading","setLoading","search","setSearch","navigate","page","setPage","coinCount","setCoinCount","fetchCoinData","data","Promise","res","rej","setTimeout","get","err","console","error","log","handelSearch","filter","coin","name","toLowerCase","includes","toLocaleLowerCase","commonSort","val","context","map","alert","handelSort","e","target","innerText","sort","a","b","price_change_24h","total_volume","market_cap","price_change_percentage_24h","handelReset","market_cap_rank","numFormatter","num","toFixed","backgroundColor","margin","fontFamily","fontSize","fontWeight","color","textAlign","width","value","Color","element","row","profit","priceChange","cursor","id","display","gap","flexDirection","alignItems","justifyContent","image","height","current_price","circulating_supply","toUpperCase","slice","length","_","window","scroll","CoinName","div","CoinPrice"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\r\nimport { CoinData } from \"../../Config/api\";\r\nimport axios from \"axios\";\r\nimport \"./CoinList.css\";\r\nimport SelectedButton from \"../SelectedButton/SelectedButton\";\r\nimport {\r\n  Container,\r\n  LinearProgress,\r\n  Pagination,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CoinList = () => {\r\n  const [sortedList, setSortedList] = useState([]);\r\n  const [flag, setFlag] = useState(false);\r\n  const { currency, symbol } = useContext(CryptoState);\r\n  const [coinSummary, setCoinSummary] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  let [page, setPage] = useState(1);\r\n  let [coinCount, setCoinCount] = useState(0);\r\n\r\n  const fetchCoinData = async (currency) => {\r\n    const { data } = await new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        try {\r\n          res(axios.get(CoinData(currency)));\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }, 10);\r\n    });\r\n    setCoinSummary(data);\r\n  };\r\n  console.log(coinSummary);\r\n  const handelSearch = () => {\r\n    return coinSummary.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search.toLocaleLowerCase()) ||\r\n        coin.symbol.toLowerCase().includes(search.toLocaleLowerCase())\r\n    );\r\n  };\r\n  const commonSort = (val) => {\r\n    if (!flag) {\r\n    const context = this;\r\n\r\n      setSortedList(coinSummary.map((coin) => coin.context));\r\n      setFlag(true);\r\n    } else {\r\n      alert(\"plese Reset the filter and try again\");\r\n    }\r\n    return sortedList;\r\n  };\r\n  // console.log(sortedList)\r\n  //handelling all sorting functionality\r\n  const handelSort = (e) => {\r\n    if (e.target.innerText === `^ Change-(24h)%`) {\r\n      commonSort(\"price_change_percentage_24h\");\r\n      // if (!flag) {\r\n      //   setSortedList(\r\n      //     coinSummary.sort(\r\n      //       (a, b) =>\r\n      //         b.price_change_percentage_24h - a.price_change_percentage_24h\r\n      //     )\r\n      //   );\r\n      //   setFlag(true);\r\n      // } else {\r\n      //   alert(\"plese Reset the filter and try again\");\r\n      // }\r\n    }\r\n    if (e.target.innerText === `^ Price Change`) {\r\n      setSortedList(\r\n        coinSummary.sort((a, b) => b.price_change_24h - a.price_change_24h)\r\n      );\r\n    }\r\n    if (e.target.innerText === `^ Volume(24h)`) {\r\n      setSortedList(\r\n        coinSummary.sort((a, b) => b.total_volume - a.total_volume)\r\n      );\r\n    }\r\n    if (e.target.innerText === `Market Cap`) {\r\n      setSortedList(coinSummary.sort((a, b) => a.market_cap - b.market_cap));\r\n    }\r\n    if (e.target.innerText === `Price Change`) {\r\n      setSortedList(\r\n        coinSummary.sort((a, b) => a.price_change_24h - b.price_change_24h)\r\n      );\r\n    }\r\n    if (e.target.innerText === `Volume(24h)`) {\r\n      setSortedList(\r\n        coinSummary.sort((a, b) => a.total_volume - b.total_volume)\r\n      );\r\n    }\r\n    if (e.target.innerText === `Change-(24h)%`) {\r\n      setSortedList(\r\n        coinSummary.sort(\r\n          (a, b) =>\r\n            a.price_change_percentage_24h - b.price_change_percentage_24h\r\n        )\r\n      );\r\n    }\r\n    // if(e.target.innerText===\"Reset\"){\r\n    //   setSortedList(coinSummary)\r\n    // }\r\n  };\r\n  const handelReset = () => {\r\n    if (flag) {\r\n      setSortedList(\r\n        coinSummary.sort((a, b) => a.market_cap_rank - b.market_cap_rank)\r\n      );\r\n      setFlag(false);\r\n    } else {\r\n      alert(\"please select a filter first\");\r\n    }\r\n  };\r\n  console.log(sortedList);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCoinData(currency);\r\n    setLoading(false);\r\n  }, [currency]);\r\n\r\n  const numFormatter = (num) => {\r\n    if (num > 999 && num < 1000000) {\r\n      return (num / 1000).toFixed(2) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n    } else if (num > 1000000) {\r\n      return (num / 1000000).toFixed(2) + \"M\"; // convert to M for number from > 1 million\r\n    } else if (num < 900) {\r\n      return num; // if value < 1000, nothing to do\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#ffffff\" }}>\r\n      <Container className=\"coin_summary_contaner\">\r\n        <p\r\n          style={{\r\n            margin: \"15px 0 10px 0px\",\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"32px\",\r\n            fontWeight: \"600\",\r\n            color: \"#006f8f\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Now you can track your favourite Coins with market cap\r\n        </p>\r\n        <TextField\r\n          style={{ margin: \"20px\", width: \"100%\" }}\r\n          varient=\"outlined\"\r\n          label=\"Search for you favourite coin..\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n        <Container className=\"filter_container\">\r\n          <SelectedButton\r\n            onClick={handelSort}\r\n          >{`^ Change-(24h)%`}</SelectedButton>\r\n          <SelectedButton\r\n            onClick={handelSort}\r\n          >{`^ Price Change`}</SelectedButton>\r\n          <SelectedButton\r\n            onClick={handelSort}\r\n          >{`^ Volume(24h)`}</SelectedButton>\r\n          <SelectedButton\r\n            onClick={handelSort}\r\n          >{`Change-(24h)%`}</SelectedButton>\r\n          <SelectedButton onClick={handelSort}>{`Price Change`}</SelectedButton>\r\n          <SelectedButton onClick={handelSort}>{`Volume(24h)`}</SelectedButton>\r\n          <SelectedButton onClick={handelSort}>{`Market Cap`}</SelectedButton>\r\n          <button className=\"reset_button\" onClick={handelReset}>\r\n            Reset\r\n          </button>\r\n        </Container>\r\n        <TableContainer>\r\n          {loading ? (\r\n            <LinearProgress style={{ Color: \"gold\" }}></LinearProgress>\r\n          ) : (\r\n            <Table>\r\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                <TableRow>\r\n                  {[\r\n                    \"Rank\",\r\n                    \"Coin\",\r\n                    \"Price\",\r\n                    \"Change(24hr)-%\",\r\n                    \"Price Change\",\r\n                    \"Volume(24hr)\",\r\n                    \"Circulating Supply\",\r\n                    `Market Cap ${symbol}`,\r\n                  ].map((element) => {\r\n                    return (\r\n                      <TableCell\r\n                        style={{\r\n                          color: \"black\",\r\n                          fontWeight: \"700\",\r\n                          fontFamily: \"Montserrat\",\r\n                        }}\r\n                        key={element}\r\n                      >\r\n                        {element}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {(handelSearch() || sortedList)\r\n                  .map((row) => {\r\n                    const profit = row?.price_change_percentage_24h.toFixed(2);\r\n                    const priceChange = row?.price_change_24h.toFixed(2);\r\n                    return (\r\n                      <TableRow\r\n                        key={row.id}\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                          navigate(`coins/${row?.id}`);\r\n                        }}\r\n                      >\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row?.market_cap_rank}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            display: \"flex\",\r\n                            gap: \"15\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={row?.image}\r\n                            alt={row?.name}\r\n                            style={{ height: \"45px\" }}\r\n                          />\r\n                          <CoinName>\r\n                            <span\r\n                              style={{\r\n                                fontSize: \"12px\",\r\n                                fontWeight: \"600\",\r\n                              }}\r\n                            >\r\n                              {row?.name}\r\n                            </span>\r\n                          </CoinName>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <CoinPrice>\r\n                            <span style={{ fontSize: \"14px\" }}>\r\n                              {symbol}\r\n                              <span> {row?.current_price}</span>\r\n                            </span>\r\n                          </CoinPrice>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {profit > 0 ? (\r\n                            <span\r\n                              style={{ color: \"green\" }}\r\n                            >{`+${profit}%`}</span>\r\n                          ) : (\r\n                            <span style={{ color: \"red\" }}>{`${profit}%`}</span>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {priceChange > 0 ? (\r\n                            <span style={{ color: \"green\" }}>\r\n                              {`+${priceChange}${symbol}`}\r\n                            </span>\r\n                          ) : (\r\n                            <span style={{ color: \"red\" }}>\r\n                              {priceChange}\r\n                              {symbol}\r\n                            </span>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <span>\r\n                            {numFormatter(row?.total_volume)} {symbol}\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <span>\r\n                            {numFormatter(row?.circulating_supply)}{\" \"}\r\n                            {row?.symbol.toUpperCase()}\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <span>{numFormatter(row?.market_cap)}</span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })\r\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n        <Pagination\r\n          className=\"pagination_component\"\r\n          count={handelSearch()?.length / 10}\r\n          onChange={(_, value) => {\r\n            setPage(value);\r\n            window.scroll(0, 300);\r\n          }}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default CoinList;\r\n\r\nconst CoinName = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #ffffff;\r\n  margin: 5px;\r\n  font-size: 12px;\r\n`;\r\nconst CoinPrice = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  color: #ffffff;\r\n  margin: 5px;\r\n  font-size: 12px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}