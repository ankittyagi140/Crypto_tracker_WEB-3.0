{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\CryptoContext\\\\CryptoContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"Rs\");\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CryptoContext, \"uwXkIS6Ay458qmmaMlYx6MIJQf4=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/CryptoContext/CryptoContext.jsx"],"names":["createContext","useContext","Crypto","CryptoContext","children","currency","setCurrency","useState","symbol","setSymbol","CryptoState"],"mappings":";;;;AAAA,SAAUA,aAAV,EAAyBC,UAAzB,QAA2C,OAA3C;;AACA,MAAMC,MAAM,gBAAGF,aAAa,EAA5B;;AAEA,MAAMG,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBC,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBF,QAAQ,CAAC,IAAD,CAAjC;AAEE,sBAAO,QAAC,MAAD,CAAQ,QAAR;AAAA,cAAkBH;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;GAAMD,a;;KAAAA,a;AAMN,eAAeA,aAAf;AAEA,OAAO,MAAMO,WAAW,GAAC,MAAI;AAAA;;AAC3BT,EAAAA,UAAU,CAACC,MAAD,CAAV;AACD,CAFM;;IAAMQ,W;;MAAAA,W","sourcesContent":["import {  createContext, useContext } from \"react\";\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\nconst [currency,setCurrency]=useState(\"INR\");\r\nconst [symbol,setSymbol]=useState(\"Rs\")\r\n\r\n  return <Crypto.Provider>{children}</Crypto.Provider>\r\n};\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState=()=>{\r\n  useContext(Crypto);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}