{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\Components\\\\CoinList\\\\CoinList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinList = () => {\n  _s();\n\n  const {\n    currency,\n    symbol\n  } = useContext(CryptoState);\n  const [coinSummary, setCoinSummary] = useState([]);\n  const [loadin, setLoading] = useState(false);\n\n  const fetchCoinData = async currency => {\n    const {\n      data\n    } = await new Promise((res, rej) => {\n      setTimeout(() => {\n        try {\n          res(axiox.get(CoinList(currency)));\n        } catch (err) {\n          console.log(err);\n        }\n      }, 10);\n    });\n    setCoinSummary(data);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"coin list page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CoinList, \"V+la7mcsjtiMkZP/US1P5HNiHxY=\");\n\n_c = CoinList;\nexport default CoinList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinList\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/Components/CoinList/CoinList.jsx"],"names":["useContext","useEffect","useState","CoinList","currency","symbol","CryptoState","coinSummary","setCoinSummary","loadin","setLoading","fetchCoinData","data","Promise","res","rej","setTimeout","axiox","get","err","console","log"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBL,UAAU,CAACM,WAAD,CAAvC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,MAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMS,aAAa,GAAG,MAAOP,QAAP,IAAoB;AACxC,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAM,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/CC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI;AACFF,UAAAA,GAAG,CAACG,KAAK,CAACC,GAAN,CAAUf,QAAQ,CAACC,QAAD,CAAlB,CAAD,CAAH;AACD,SAFD,CAEE,OAAOe,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,OANS,EAMP,EANO,CAAV;AAOD,KARsB,CAAvB;AASAX,IAAAA,cAAc,CAACI,IAAD,CAAd;AACD,GAXD;;AAYFX,EAAAA,SAAS,CAAC,MAAI;AACdS,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEC,GAHQ,EAGP,CAACN,QAAD,CAHO,CAAT;AAIE,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBD;;GAAMD,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\n\r\nconst CoinList = () => {\r\n  const { currency, symbol } = useContext(CryptoState);\r\n  const [coinSummary, setCoinSummary] = useState([]);\r\n  const [loadin, setLoading] = useState(false);\r\n\r\n  const fetchCoinData = async (currency) => {\r\n    const { data } = await new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        try {\r\n          res(axiox.get(CoinList(currency)));\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }, 10);\r\n    });\r\n    setCoinSummary(data)\r\n  };\r\nuseEffect(()=>{\r\nsetLoading(true);\r\n\r\n},[currency])\r\n  return <div>coin list page</div>;\r\n};\r\nexport default CoinList;\r\n"]},"metadata":{},"sourceType":"module"}