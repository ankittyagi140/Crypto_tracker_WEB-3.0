{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\crypto_tracker\\\\crypto_tracker\\\\src\\\\Components\\\\CoinList\\\\CoinList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\nimport { CoinData } from \"../../Config/api\";\nimport axios from \"axios\";\nimport \"./CoinList.css\";\nimport { Container, LinearProgress, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinList = () => {\n  _s();\n\n  const {\n    currency,\n    symbol\n  } = useContext(CryptoState);\n  const [coinSummary, setCoinSummary] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const navigate = useNavigate();\n\n  const fetchCoinData = async currency => {\n    const {\n      data\n    } = await new Promise((res, rej) => {\n      setTimeout(() => {\n        try {\n          res(axios.get(CoinData(currency)));\n        } catch (err) {\n          console.error(err);\n        }\n      }, 10);\n    });\n    setCoinSummary(data);\n  };\n\n  const handelSearch = () => {\n    return coinSummary.filter(coin => coin.name.toLowerCase().includes(search.toLocaleLowerCase()) || coin.symbol.toLowerCase().includes(search.toLocaleLowerCase()));\n  };\n\n  console.log(coinSummary);\n  useEffect(() => {\n    setLoading(true);\n    fetchCoinData(currency);\n    setLoading(false);\n  }, [currency]);\n\n  const numFormatter = num => {\n    if (num > 999 && num < 1000000) {\n      return (num / 1000).toFixed(2) + \"K\"; // convert to K for number from > 1000 < 1 million\n    } else if (num > 1000000) {\n      return (num / 1000000).toFixed(2) + \"M\"; // convert to M for number from > 1 million\n    } else if (num < 900) {\n      return num; // if value < 1000, nothing to do\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#ffffff\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"coin_summary_contaner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"15px 0 10px 0px\",\n          fontFamily: \"Montserrat\",\n          fontSize: \"32px\",\n          fontWeight: \"600\",\n          color: \"#006f8f\"\n        },\n        children: \"Get detail of your coins with market cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          margin: \"20px\",\n          width: \"100%\"\n        },\n        varient: \"outlined\",\n        label: \"Search for you favourite coin..\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Coin\", \"Price\", \"24Hrs-Change-%\", \"Market Cap\"].map(element => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"black\",\n                    fontWeight: \"700\",\n                    fontFamily: \"Montserrat\"\n                  },\n                  children: element\n                }, element, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handelSearch().map(row => {\n              const profit = row === null || row === void 0 ? void 0 : row.price_change_percentage_24h;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: () => {\n                  navigate(`coin/${row === null || row === void 0 ? void 0 : row.id}`);\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  style: {\n                    display: \"flex\",\n                    gap: \"15\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row === null || row === void 0 ? void 0 : row.image,\n                    alt: row === null || row === void 0 ? void 0 : row.name,\n                    style: {\n                      height: \"20px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CoinName, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        textTransform: \"uppercase\",\n                        marginBottom: \"2px\"\n                      },\n                      children: row === null || row === void 0 ? void 0 : row.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: row === null || row === void 0 ? void 0 : row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(CoinName, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [symbol, /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: row === null || row === void 0 ? void 0 : row.current_price\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: profit > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"green\"\n                    },\n                    children: `+ ${profit}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: profit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: numFormatter(row === null || row === void 0 ? void 0 : row.market_cap)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinList, \"LSukcXHi4234NHoF0FEAgqayzok=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CoinList;\nexport default CoinList;\nconst CoinName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #ffffff;\n  margin: 5px;\n  font-size: 12px;\n`;\n_c2 = CoinName;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CoinList\");\n$RefreshReg$(_c2, \"CoinName\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Desktop/crypto_tracker/crypto_tracker/src/Components/CoinList/CoinList.jsx"],"names":["useContext","useEffect","useState","CryptoState","CoinData","axios","Container","LinearProgress","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","useNavigate","styled","CoinList","currency","symbol","coinSummary","setCoinSummary","loading","setLoading","search","setSearch","navigate","fetchCoinData","data","Promise","res","rej","setTimeout","get","err","console","error","handelSearch","filter","coin","name","toLowerCase","includes","toLocaleLowerCase","log","numFormatter","num","toFixed","backgroundColor","margin","fontFamily","fontSize","fontWeight","color","width","e","target","value","map","element","row","profit","price_change_percentage_24h","id","display","gap","flexDirection","alignItems","justifyContent","image","height","textTransform","marginBottom","current_price","market_cap","CoinName","div"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { CryptoState } from \"../../CryptoContext/CryptoContext\";\r\nimport { CoinData } from \"../../Config/api\";\r\nimport axios from \"axios\";\r\nimport \"./CoinList.css\";\r\nimport {\r\n  Container,\r\n  LinearProgress,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CoinList = () => {\r\n  const { currency, symbol } = useContext(CryptoState);\r\n  const [coinSummary, setCoinSummary] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const fetchCoinData = async (currency) => {\r\n    const { data } = await new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        try {\r\n          res(axios.get(CoinData(currency)));\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }, 10);\r\n    });\r\n    setCoinSummary(data);\r\n  };\r\n  const handelSearch = () => {\r\n    return coinSummary.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search.toLocaleLowerCase()) ||\r\n        coin.symbol.toLowerCase().includes(search.toLocaleLowerCase())\r\n    );\r\n  };\r\n  console.log(coinSummary);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCoinData(currency);\r\n    setLoading(false);\r\n  }, [currency]);\r\n\r\n  const numFormatter = (num) => {\r\n    if (num > 999 && num < 1000000) {\r\n      return (num / 1000).toFixed(2) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n    } else if (num > 1000000) {\r\n      return (num / 1000000).toFixed(2) + \"M\"; // convert to M for number from > 1 million\r\n    } else if (num < 900) {\r\n      return num; // if value < 1000, nothing to do\r\n    }\r\n  };\r\n  return (\r\n    <div style={{backgroundColor:\"#ffffff\"}}>\r\n      <Container className=\"coin_summary_contaner\">\r\n        <p\r\n          style={{\r\n            margin: \"15px 0 10px 0px\",\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"32px\",\r\n            fontWeight: \"600\",\r\n            color:\"#006f8f\",\r\n          }}\r\n        >\r\n          Get detail of your coins with market cap\r\n        </p>\r\n        <TextField\r\n          style={{ margin: \"20px\", width: \"100%\" }}\r\n          varient=\"outlined\"\r\n          label=\"Search for you favourite coin..\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n        <TableContainer>\r\n          {loading ? (\r\n            <LinearProgress\r\n              style={{ backgroundColor: \"gold\" }}\r\n            ></LinearProgress>\r\n          ) : (\r\n            <Table>\r\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                <TableRow>\r\n                  {[\"Coin\", \"Price\", \"24Hrs-Change-%\", \"Market Cap\"].map(\r\n                    (element) => {\r\n                      return (\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: \"700\",\r\n                            fontFamily: \"Montserrat\",\r\n                          }}\r\n                          key={element}\r\n                          //align={element === \"coin\" ? \"\" : \"right\"}\r\n                        >\r\n                          {element}\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                  )}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {handelSearch().map((row) => {\r\n                  const profit = row?.price_change_percentage_24h;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      key={row.id}\r\n                      onClick={() => {\r\n                        navigate(`coin/${row?.id}`);\r\n                      }}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          gap: \"15\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={row?.image}\r\n                          alt={row?.name}\r\n                          style={{ height: \"20px\" }}\r\n                        />\r\n                        <CoinName>\r\n                          <span\r\n                            style={{\r\n                              textTransform: \"uppercase\",\r\n                              marginBottom: \"2px\",\r\n                            }}\r\n                          >\r\n                            {row?.symbol}\r\n                          </span>\r\n                          <span>{row?.name}</span>\r\n                        </CoinName>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <CoinName>\r\n                          <span>\r\n                            {symbol}\r\n                            <span>{row?.current_price}</span>\r\n                          </span>\r\n                        </CoinName>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {profit > 0 ? (\r\n                          <span style={{ color: \"green\" }}>{`+ ${profit}`}</span>\r\n                        ) : (\r\n                          <span style={{ color: \"red\" }}>{profit}</span>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <span>{numFormatter(row?.market_cap)}</span>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default CoinList;\r\n\r\nconst CoinName = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #ffffff;\r\n  margin: 5px;\r\n  font-size: 12px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}